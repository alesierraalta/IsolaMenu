name: Docker Hub

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3  # Checkout the code

      - name: Set up Python 3  # Setup Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      
      - name: Set up Node.js  # Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '21'
    
      - name: Install backend dependencies  # Install backend Python dependencies
        run: pip install -r Backend/requirements.txt

      - name: Install frontend dependencies  # Install frontend Node dependencies
        run: |
          cd frontend
          npm install




 
  build-and-push-backend:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3  # Checkout the repository content
  
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
  
        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  
        - name: Build and push Docker image for backend
          uses: docker/build-push-action@v4
          with:
            context: ./Backend  # Set the context to the backend directory
            file: ./Backend/Dockerfile  # Path to the Dockerfile in the backend directory
            tags: ${{ secrets.DOCKER_REPOSITORY }}/isolamenu-backend:latest  # Use DOCKER_REPOSITORY secret for the Docker image repository
            push: true

  build-and-push-frontend:
      runs-on: ubuntu-latest
      needs: build-and-push-backend
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
  
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
  
        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  
        - name: Build and push Docker image for frontend
          uses: docker/build-push-action@v4
          with:
            context: ./frontend  # Set the context to the frontend directory
            file: ./frontend/Dockerfile  # Path to the Dockerfile in the frontend directory
            tags: ${{ secrets.DOCKER_REPOSITORY }}/isolamenu-frontend:latest
            push: true
