name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3  # Checkout the code

      - name: Set up Python 3  # Setup Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install backend dependencies  # Install backend Python dependencies
        run: pip install -r Backend/requirements.txt

      - name: Run backend tests for menu app  # Execute tests for the 'menu' app
        run: |
          cd Backend
          python manage.py test menu

      - name: Run backend tests for multimedia app  # Execute tests for the 'multimedia' app
        run: |
          cd Backend
          python manage.py test multimedia

  build-and-push-backend:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Checkout the repository content

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}  # Use DOCKER_HUB_USERNAME secret for Docker Hub login
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}  # Use DOCKER_HUB_ACCESS_TOKEN secret for Docker Hub password

      - name: Build and push Docker image for backend
        uses: docker/build-push-action@v4
        with:
          context: ./Backend
          file: ./Backend/Dockerfile
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:backend-latest  # Use your Docker Hub repo and specify the backend tag
          push: true

  build-and-push-frontend:
    runs-on: ubuntu-latest
    needs: build-and-push-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image for frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:frontend-latest
          push: true
