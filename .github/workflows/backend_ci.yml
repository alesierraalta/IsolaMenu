name: Backend CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
    paths:
      - 'Backend/**'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'Backend/**'

jobs:
  backend-test-and-lint:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12  # Use the PostgreSQL version that matches your production setup
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: [3.10.11]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Backend/requirements.txt

      - name: Set up test database environment variables
        run: |
          echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV

      - name: Run Tests
        run: |
          cd Backend
          python manage.py test

      - name: Lint with flake8
        run: |
          flake8 Backend --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Coverage Report
        run: |
          cd Backend
          coverage run manage.py test
          coverage report
